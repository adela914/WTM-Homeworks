{"version":3,"sources":["test/comment.js"],"names":["commentToCreate","text","restaurantToCreate","name","location","comments","t","restaurantRes","app","post","send","is","status","restaurantCreated","body","commentRes","_id","jsonComments","get","true","Array","isArray","length","plan","commentJson","deleteRestaurant","delete","ok","fetch"],"mappings":"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","sourceRoot":"/Users/kyunghwa/Desktop/WTM2019/Homeworks/week7","sourcesContent":["import test from 'ava'\nimport request from 'supertest'\nimport app from '../app'\n\n\nconst commentToCreate = {\n    text: \"It was good!\"\n}\n\nconst restaurantToCreate = {\n    name: \"Test1\",\n    location: \"Test\",\n    comments: []\n}\n\n\n\ntest(\"Get list of comments\", async t => {\n\n    const restaurantRes = await request(app)\n        .post(\"/restaurants/new\")\n        .send(restaurantToCreate)\n\n    t.is(restaurantRes.status, 200)\n\n    const restaurantCreated = (await request(app)\n        .post(\"/restaurants/new\")\n        .send(restaurantToCreate)).body\n\n    const commentRes = await request(app)\n        .post(`/restaurants/${restaurantCreated._id}`)\n        .send(commentToCreate)\n\n    t.is(commentRes.status, 200)\n\n    const jsonComments = await request(app).get('/comments')\n\n    t.is(jsonComments.status, 200)\n\n    t.true(Array.isArray(jsonComments.body), 'Body should be an array')\n    t.true(jsonComments.body.length > 0)\n\n\n})\n\n\n\n\n\ntest(\"Create a new comment\", async t => {\n    t.plan(2)\n\n\n    ///first creating a restaurant to leave a comment\n    const restaurantRes = await request(app)\n        .post(\"/restaurants/new\")\n        .send(restaurantToCreate)\n\n    t.is(restaurantRes.status, 200)\n\n    const restaurantCreated = (await request(app)\n        .post(\"/restaurants/new\")\n        .send(restaurantToCreate)).body\n\n    const commentRes = await request(app)\n        .post(`/restaurants/${restaurantCreated._id}`)\n        .send(commentToCreate)\n\n    t.is(commentRes.status, 200)\n\n\n\n})\n\n\ntest(\"Delete a new comment\", async t => {\n    t.plan(5)\n\n\n    ///first creating a restaurant\n\n    const restaurantRes = await request(app)\n        .post(\"/restaurants/new\")\n        .send(restaurantToCreate)\n\n    t.is(restaurantRes.status, 200)\n\n    const restaurantCreated = (await request(app)\n        .post(\"/restaurants/new\")\n        .send(restaurantToCreate)).body\n\n    const commentRes = await request(app)\n        .post(`/restaurants/${restaurantCreated._id}`)\n        .send(commentToCreate)\n\n    t.is(commentRes.status, 200)\n\n    const commentJson = (await request(app)\n        .post(`/restaurants/${restaurantCreated._id}`)\n        .send(commentToCreate)).body\n\n    const deleteRestaurant = await request(app)\n        .delete(`/comments/${commentJson._id}`)\n\n    t.is(deleteRestaurant.status, 200)\n    t.is(deleteRestaurant.ok, true)\n\n    const fetch = await request(app).get(`/comments/${commentJson._id}`)\n    t.is(fetch.status, 404)\n\n\n\n\n})"]}